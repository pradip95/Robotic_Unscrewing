// Generated by gencpp from file control_lib/String_cmd.msg
// DO NOT EDIT!


#ifndef CONTROL_LIB_MESSAGE_STRING_CMD_H
#define CONTROL_LIB_MESSAGE_STRING_CMD_H

#include <ros/service_traits.h>


#include <control_lib/String_cmdRequest.h>
#include <control_lib/String_cmdResponse.h>


namespace control_lib {

struct String_cmd
{
  typedef String_cmdRequest Request;
  typedef String_cmdResponse Response;
  Request request;
  Response response;

  typedef Request RequestType;
  typedef Response ResponseType;

}; // struct String_cmd
} // namespace control_lib


namespace ros {
namespace service_traits {


template <>
struct MD5Sum< ::control_lib::String_cmd>
{
  static const char* value() { return "d4463b49bd5bb77dbd8c4356f5dc1c28"; }

  static const char* value(const ::control_lib::String_cmd&) { return value(); }
};

template <>
struct DataType< ::control_lib::String_cmd>
{
  static const char* value() { return "control_lib/String_cmd"; }

  static const char* value(const ::control_lib::String_cmd&) { return value(); }
};


// service_traits::MD5Sum< ::control_lib::String_cmdRequest> should match
// service_traits::MD5Sum< ::control_lib::String_cmd >
template <>
struct MD5Sum< ::control_lib::String_cmdRequest>
{
  static const char* value() { return MD5Sum< ::control_lib::String_cmd>::value(); }
  static const char* value(const ::control_lib::String_cmdRequest&) { return value(); }
};

// service_traits::DataType< ::control_lib::String_cmdRequest> should match
// service_traits::DataType< ::control_lib::String_cmd >
template <>
struct DataType< ::control_lib::String_cmdRequest>
{
  static const char* value() { return DataType< ::control_lib::String_cmd>::value(); }
  static const char* value(const ::control_lib::String_cmdRequest&) { return value(); }
};

// service_traits::MD5Sum< ::control_lib::String_cmdResponse> should match
// service_traits::MD5Sum< ::control_lib::String_cmd >
template <>
struct MD5Sum< ::control_lib::String_cmdResponse>
{
  static const char* value() { return MD5Sum< ::control_lib::String_cmd>::value(); }
  static const char* value(const ::control_lib::String_cmdResponse&) { return value(); }
};

// service_traits::DataType< ::control_lib::String_cmdResponse> should match
// service_traits::DataType< ::control_lib::String_cmd >
template <>
struct DataType< ::control_lib::String_cmdResponse>
{
  static const char* value() { return DataType< ::control_lib::String_cmd>::value(); }
  static const char* value(const ::control_lib::String_cmdResponse&) { return value(); }
};

} // namespace service_traits
} // namespace ros

#endif // CONTROL_LIB_MESSAGE_STRING_CMD_H
